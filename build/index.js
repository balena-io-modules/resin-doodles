(function() {
  var HOLIDAYS, charlie, compareArrays, dateIsBetween;

  charlie = require('./charlie');

  HOLIDAYS = [
    {
      start: [
        10,
        30 // [month, day]
      ],
      end: [11,
    1],
      doodle: require('./pumpkin')
    },
    {
      start: [12,
    20],
      end: [1,
    5],
      doodle: require('./charlie-christmas')
    }
  ];

  compareArrays = function(a1, a2) {
    var i, j, ref;
    for (i = j = 0, ref = a1.length; (0 <= ref ? j < ref : j > ref); i = 0 <= ref ? ++j : --j) {
      if (a1[i] < a2[i]) {
        return -1;
      } else if (a1[i] > a2[i]) {
        return 1;
      }
    }
    return 0;
  };

  dateIsBetween = function(date, start, end) {
    var endDate, nextYear, startDate, thisYear, year;
    year = date.getFullYear();
    startDate = new Date(year, start[0] - 1, start[1]);
    endDate = new Date(year, end[0] - 1, end[1]);
    if (compareArrays(start, end) <= 0) {
      return (startDate < date && date < endDate);
    } else {
      thisYear = new Date(year, 0, 1);
      nextYear = new Date(year + 1, 0, 1);
      return ((startDate < date && date < nextYear)) || ((thisYear < date && date < endDate));
    }
  };

  exports.getDoodle = function(date) {
    var h, j, len;
    if (date == null) {
      date = new Date();
    }
    for (j = 0, len = HOLIDAYS.length; j < len; j++) {
      h = HOLIDAYS[j];
      if (dateIsBetween(date, h.start, h.end)) {
        return h.doodle;
      }
    }
    return charlie;
  };

}).call(this);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbImluZGV4LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBLE1BQUEsUUFBQSxFQUFBLE9BQUEsRUFBQSxhQUFBLEVBQUE7O0VBQUEsT0FBQSxHQUFVLE9BQUEsQ0FBUSxXQUFSOztFQUVWLFFBQUEsR0FBVztJQUNWO01BQ0MsS0FBQSxFQUFPO1FBQUMsRUFBRDtRQUFLLEVBQUw7T0FEUjtNQUVDLEdBQUEsRUFBSyxDQUFDLEVBQUQ7SUFBSyxDQUFMLENBRk47TUFHQyxNQUFBLEVBQVEsT0FBQSxDQUFRLFdBQVI7SUFIVCxDQURVO0lBTVY7TUFDQyxLQUFBLEVBQU8sQ0FBQyxFQUFEO0lBQUssRUFBTCxDQURSO01BRUMsR0FBQSxFQUFLLENBQUMsQ0FBRDtJQUFJLENBQUosQ0FGTjtNQUdDLE1BQUEsRUFBUSxPQUFBLENBQVEscUJBQVI7SUFIVCxDQU5VOzs7RUFhWCxhQUFBLEdBQWdCLFFBQUEsQ0FBQyxFQUFELEVBQUssRUFBTCxDQUFBO0FBQ2hCLFFBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQTtJQUFDLEtBQVMsb0ZBQVQ7TUFDQyxJQUFHLEVBQUUsQ0FBQyxDQUFELENBQUYsR0FBUSxFQUFFLENBQUMsQ0FBRCxDQUFiO0FBQ0MsZUFBTyxDQUFDLEVBRFQ7T0FBQSxNQUVLLElBQUcsRUFBRSxDQUFDLENBQUQsQ0FBRixHQUFRLEVBQUUsQ0FBQyxDQUFELENBQWI7QUFDSixlQUFPLEVBREg7O0lBSE47QUFLQSxXQUFPO0VBTlE7O0VBUWhCLGFBQUEsR0FBZ0IsUUFBQSxDQUFDLElBQUQsRUFBTyxLQUFQLEVBQWMsR0FBZCxDQUFBO0FBQ2hCLFFBQUEsT0FBQSxFQUFBLFFBQUEsRUFBQSxTQUFBLEVBQUEsUUFBQSxFQUFBO0lBQUMsSUFBQSxHQUFPLElBQUksQ0FBQyxXQUFMLENBQUE7SUFDUCxTQUFBLEdBQVksSUFBSSxJQUFKLENBQVMsSUFBVCxFQUFlLEtBQUssQ0FBQyxDQUFELENBQUwsR0FBVyxDQUExQixFQUE2QixLQUFLLENBQUMsQ0FBRCxDQUFsQztJQUNaLE9BQUEsR0FBVSxJQUFJLElBQUosQ0FBUyxJQUFULEVBQWUsR0FBRyxDQUFDLENBQUQsQ0FBSCxHQUFTLENBQXhCLEVBQTJCLEdBQUcsQ0FBQyxDQUFELENBQTlCO0lBQ1YsSUFBRyxhQUFBLENBQWMsS0FBZCxFQUFxQixHQUFyQixDQUFBLElBQTZCLENBQWhDO0FBQ0MsYUFBTyxDQUFBLFNBQUEsR0FBWSxJQUFaLElBQVksSUFBWixHQUFtQixPQUFuQixFQURSO0tBQUEsTUFBQTtNQUdDLFFBQUEsR0FBVyxJQUFJLElBQUosQ0FBUyxJQUFULEVBQWUsQ0FBZixFQUFrQixDQUFsQjtNQUNYLFFBQUEsR0FBVyxJQUFJLElBQUosQ0FBUyxJQUFBLEdBQU8sQ0FBaEIsRUFBbUIsQ0FBbkIsRUFBc0IsQ0FBdEI7QUFDWCxhQUFPLENBQUMsQ0FBQSxTQUFBLEdBQVksSUFBWixJQUFZLElBQVosR0FBbUIsUUFBbkIsQ0FBRCxDQUFBLElBQWlDLENBQUMsQ0FBQSxRQUFBLEdBQVcsSUFBWCxJQUFXLElBQVgsR0FBa0IsT0FBbEIsQ0FBRCxFQUx6Qzs7RUFKZTs7RUFXaEIsT0FBTyxDQUFDLFNBQVIsR0FBb0IsUUFBQSxDQUFDLElBQUQsQ0FBQTtBQUNwQixRQUFBLENBQUEsRUFBQSxDQUFBLEVBQUE7O01BQUMsT0FBUSxJQUFJLElBQUosQ0FBQTs7SUFDUixLQUFBLDBDQUFBOztNQUNDLElBQUcsYUFBQSxDQUFjLElBQWQsRUFBb0IsQ0FBQyxDQUFDLEtBQXRCLEVBQTZCLENBQUMsQ0FBQyxHQUEvQixDQUFIO0FBQ0MsZUFBTyxDQUFDLENBQUMsT0FEVjs7SUFERDtBQUdBLFdBQU87RUFMWTtBQWxDcEIiLCJzb3VyY2VzQ29udGVudCI6WyJjaGFybGllID0gcmVxdWlyZSAnLi9jaGFybGllJ1xuXG5IT0xJREFZUyA9IFtcblx0e1xuXHRcdHN0YXJ0OiBbMTAsIDMwXSAgIyBbbW9udGgsIGRheV1cblx0XHRlbmQ6IFsxMSwgMV1cblx0XHRkb29kbGU6IHJlcXVpcmUoJy4vcHVtcGtpbicpXG5cdH1cblx0e1xuXHRcdHN0YXJ0OiBbMTIsIDIwXVxuXHRcdGVuZDogWzEsIDVdXG5cdFx0ZG9vZGxlOiByZXF1aXJlKCcuL2NoYXJsaWUtY2hyaXN0bWFzJylcblx0fVxuXVxuXG5jb21wYXJlQXJyYXlzID0gKGExLCBhMikgLT5cblx0Zm9yIGkgaW4gWzAuLi5hMS5sZW5ndGhdXG5cdFx0aWYgYTFbaV0gPCBhMltpXVxuXHRcdFx0cmV0dXJuIC0xXG5cdFx0ZWxzZSBpZiBhMVtpXSA+IGEyW2ldXG5cdFx0XHRyZXR1cm4gMVxuXHRyZXR1cm4gMFxuXG5kYXRlSXNCZXR3ZWVuID0gKGRhdGUsIHN0YXJ0LCBlbmQpIC0+XG5cdHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKClcblx0c3RhcnREYXRlID0gbmV3IERhdGUoeWVhciwgc3RhcnRbMF0gLSAxLCBzdGFydFsxXSlcblx0ZW5kRGF0ZSA9IG5ldyBEYXRlKHllYXIsIGVuZFswXSAtIDEsIGVuZFsxXSlcblx0aWYgY29tcGFyZUFycmF5cyhzdGFydCwgZW5kKSA8PSAwXG5cdFx0cmV0dXJuIHN0YXJ0RGF0ZSA8IGRhdGUgPCBlbmREYXRlXG5cdGVsc2Vcblx0XHR0aGlzWWVhciA9IG5ldyBEYXRlKHllYXIsIDAsIDEpXG5cdFx0bmV4dFllYXIgPSBuZXcgRGF0ZSh5ZWFyICsgMSwgMCwgMSlcblx0XHRyZXR1cm4gKHN0YXJ0RGF0ZSA8IGRhdGUgPCBuZXh0WWVhcikgb3IgKHRoaXNZZWFyIDwgZGF0ZSA8IGVuZERhdGUpXG5cbmV4cG9ydHMuZ2V0RG9vZGxlID0gKGRhdGUpIC0+XG5cdGRhdGUgPz0gbmV3IERhdGUoKVxuXHRmb3IgaCBpbiBIT0xJREFZU1xuXHRcdGlmIGRhdGVJc0JldHdlZW4oZGF0ZSwgaC5zdGFydCwgaC5lbmQpXG5cdFx0XHRyZXR1cm4gaC5kb29kbGVcblx0cmV0dXJuIGNoYXJsaWVcbiJdfQ==
